name: Test and Deploy to Production

on:
  workflow_dispatch:

  push:
    branches:
      - production
  pull_request:
    branches:
      - production    

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node.js version from .nvmrc
        id: node_version
        run: |
          NODE_VERSION=$(cat .nvmrc)
          echo "Using Node.js version $NODE_VERSION"
          echo "NODE_VERSION=${NODE_VERSION}" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Run Tests
        run: yarn test


      - name: Run Production tests
        run: yarn test:production

  build-and-deploy:
    name: Build and Deploy to Production
    needs: test
    runs-on: ubuntu-latest

    # REQUIREMENT FOR PRODUCTION ADMINISTRATORS TO ACCEPT DEPLOYMENT
    # environment:
    #     name: production  

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node.js version from .nvmrc
        id: node_version
        run: |
          NODE_VERSION=$(cat .nvmrc)
          echo "Using Node.js version $NODE_VERSION"
          echo "NODE_VERSION=${NODE_VERSION}" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: yarn install

      - name: Build the React App
        run: yarn build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.AWS_REMOTE_IP }} >> ~/.ssh/known_hosts
      

      - name: Install rsync
        run: sudo apt-get install -y rsync
                  
      - name: Deploy to Production
        run: |
          echo "Deploying to Production"
          rsync -avz --no-times --no-perms -e "ssh -o StrictHostKeyChecking=no" dist/ ${AWS_USER}@${AWS_REMOTE_IP}:${AWS_REMOTE_DESTINATION_FOLDER}

        env:    
          AWS_USER: ${{ secrets.AWS_USER }}
          AWS_REMOTE_IP: ${{ secrets.AWS_REMOTE_IP }}
          AWS_REMOTE_DESTINATION_FOLDER: ${{ secrets.AWS_REMOTE_DESTINATION_FOLDER }}  

    #   - name: Notify Slack of Production Deployment Start
    #     uses: slackapi/slack-github-action@v1.23.0
    #     with:
    #         slack-message: "Production deployment started."
    #     env:
    #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}


    #   - name: Verify Production Deployment
    #     run: curl -f ${{ secrets.REMOTE_DOMAIN_PRODUCTION_NAME}}/health-check || exit 1          

      - name: Cleanup SSH Keys
        run: shred -u ~/.ssh/id_rsa


        